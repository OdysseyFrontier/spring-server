<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enjoyTrip.OdysseyFrontiers.plan.model.mapper.PlanMapper">

    <resultMap id="planResultMap" type="com.enjoyTrip.OdysseyFrontiers.plan.model.dto.PlanDto">
        <id property="planId" column="plan_id"/>
        <result property="memberId" column="member_id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="season" column="season"/>
        <result property="accessType" column="access_type"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="recentUpdateTime" column="recent_update_time"/>
        <result property="memberName" column="member_name"/>
        <result property="memberImage" column="member_image"/>
        <result property="image" column="image"/>
        <collection property="planDetails" ofType="com.enjoyTrip.OdysseyFrontiers.plan.model.dto.PlanDetailDto" resultMap="planDetailMap"/>
    </resultMap>

    <resultMap id="planDetailMap" type="com.enjoyTrip.OdysseyFrontiers.plan.model.dto.PlanDetailDto">
        <id property="planDetailId" column="plan_detail_id"/>
        <result property="planId" column="plan_id"/>
        <result property="day" column="day"/>
        <result property="contentId" column="content_id"/>
        <result property="description" column="description"/>
        <result property="planTime" column="plan_time"/>
        <collection property="attractionInfo" ofType="com.enjoyTrip.OdysseyFrontiers.attraction.model.dto.AttractionInfo" resultMap="AttractionResultMap"/>
    </resultMap>

    <resultMap id="AttractionResultMap" type="com.enjoyTrip.OdysseyFrontiers.attraction.model.dto.AttractionInfo">
        <result property="title" column="info_title"/>
        <result property="firstImage" column="first_image"/>
        <result property="firstImage2" column="first_image2"/>
        <result property="addr1" column="addr1"/>
        <result property="addr2" column="addr2"/>
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
    </resultMap>

    <sql id="search">
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="sidoCode != null and sidoCode != 0">
                AND info.sido_code = #{sidoCode}
            </if>
            <if test="gugunCode != null and gugunCode != 0">
                AND info.gugun_code = #{gugunCode}
            </if>
            <if test="contentTypeId != null and contentTypeId != 0">
                AND info.content_type_id = #{contentTypeId}
            </if>
            <if test="keyword != null and keyword != 'no' and keyword != ''">
                AND (info.title LIKE CONCAT('%', #{keyword}, '%') OR pd.description LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </trim>
    </sql>

    <select id="searchPlans" parameterType="map" resultMap="planResultMap">
        SELECT DISTINCT p.*
        FROM plan p
        JOIN plan_detail pd ON p.plan_id = pd.plan_id
        JOIN attraction_info info ON pd.content_id = info.content_id
        <include refid="search"/>
        GROUP BY
        p.plan_id,
        p.member_id,
        p.title,
        p.description,
        p.season,
        p.access_type,
        p.start_time,
        p.recent_update_time,
        pd.plan_detail_id,
        pd.plan_id,
        pd.day,
        pd.content_id,
        pd.description,
        pd.plan_time
        ORDER BY p.recent_update_time DESC
        LIMIT 5;
    </select>

    <select id="getPlan" parameterType="long" resultMap="planResultMap">
        SELECT
            p.*,
            pd.plan_detail_id,
            pd.plan_id,
            pd.content_id,
            pd.plan_time,
            pd.description,
            info.title as info_title,
            info.first_image,
            info.addr1,
            info.addr2,
            info.latitude,
            info.longitude,
            members.name as member_name,
            members.member_id,
            members.image,
            MAX(pd.plan_time) AS end_time
        FROM plan p
        JOIN plan_detail pd
        ON p.plan_id = pd.plan_id
        JoIn attraction_info info
        on pd.content_id = info.content_id
        Join members
        on info.member_id = members.member_id
        WHERE
            p.plan_id = #{planId}
        GROUP BY
            p.plan_id, pd.plan_detail_id, pd.plan_time, pd.description, pd.content_id, members.name, members.member_id
    </select>


    <insert id="insertPlan" useGeneratedKeys="true" keyProperty="planId">
        INSERT INTO plan (member_id, title, description, season, start_time, access_type)
        VALUES (#{member_id}, #{title}, #{description}, #{season}, #{startTime}, #{accessType})
    </insert>

    <insert id="insertPlanDetail">
        INSERT INTO plan_detail (plan_id, day, content_id, description, plan_time)
        VALUES (#{planId}, #{day}, #{contentId}, #{description}, #{planTime})
    </insert>

    <update id="updatePlan">
        UPDATE plan
        SET member_id = #{memberId},
            title = #{title},
            description = #{description},
            season = #{season},
            start_time = #{startTime},
            access_type = #{accessType},
            recent_update_time = #{recentUpdateTime}
        WHERE plan_id = #{planId}
    </update>

    <delete id="deletePlan">
        DELETE FROM plan
        WHERE plan_id = #{planId}
    </delete>

    <delete id="deletePlanDetails">
        DELETE FROM plan_detail
        WHERE plan_id = #{planId}
    </delete>

    <select id="findPlansByMemberId" parameterType="long" resultMap="planResultMap">
        SELECT DISTINCT p.*
        FROM plan p
        WHERE p.member_id = #{memberId}
        ORDER BY p.recent_update_time DESC
    </select>

    <select id="findLikedPlansByMemberId" parameterType="long" resultMap="planResultMap">
        SELECT DISTINCT p.*
        FROM plan p
                 JOIN plan_like pl ON p.plan_id = pl.plan_id
        WHERE pl.member_id = #{memberId}
        ORDER BY p.recent_update_time DESC
    </select>

</mapper>
