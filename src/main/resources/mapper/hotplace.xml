<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enjoyTrip.OdysseyFrontiers.hotplace.model.mapper.HotPlaceMapper">
    <resultMap id="resultSido" type="com.enjoyTrip.OdysseyFrontiers.hotplace.model.dto.Sido2">
        <result column="sido_code" property="sidoCode"/>
        <result column="sido_name" property="sidoName"/>
    </resultMap>

    <resultMap id="resultGugun" type="com.enjoyTrip.OdysseyFrontiers.hotplace.model.dto.Gugun2">
        <result column="gugun_code" property="gugunCode"/>
        <result column="gugun_name" property="gugunName"/>
        <result column="sido_code" property="sidoCode"/>
    </resultMap>

    <resultMap id="resultAttr" type="com.enjoyTrip.OdysseyFrontiers.hotplace.model.dto.HotPlaceDto">
        <result column="member_id" property="memberId"/>
        <result column="content_id" property="contentId"/>
        <result column="content_type_id" property="contentTypeId"/>
        <result column="sido_code" property="sidoCode"/>
        <result column="gugun_code" property="gugunCode"/>
        <result column="first_image" property="firstImage"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
    
    <resultMap type="hotPlaceHitDto" id="hotPlaceHit">
        <result column="content_id" property="contentId"/>
        <result column="member_id" property="memberId"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    
    <resultMap type="hotPlaceLikeDto" id="hotplaceLike">
        <result column="content_id" property="contentId"/>
        <result column="member_id" property="memberId"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="listSidos" resultMap="resultSido">
        SELECT *
        FROM sido;
    </select>

    <select id="listGuguns" parameterType="int" resultMap="resultGugun">
        SELECT *
        FROM gugun
        WHERE sido_code = #{sidoCode};
    </select>
    
    <select id="getSidoCode">
        SELECT sido_code
        FROM sido
        WHERE sido_name = #{sidocode};
    </select>

	
	<insert id="writeHotPlaceInfo" parameterType="hotPlaceDto">
        insert into attraction_info (member_id, content_type_id, title, addr1, addr2, zipcode, tel, first_image, sido_code, gugun_code, latitude, longitude, mlevel)
        values (#{memberId}, #{contentTypeId}, #{title}, #{addr1}, #{addr2}, #{zipcode}, #{tel}, #{firstImage}, #{sidoCode}, #{gugunCode}, #{latitude}, #{longitude}, #{mlevel})
        <selectKey resultType="int" keyProperty="contentId" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>
    
    <insert id="writeHotPlaceDetail" parameterType="hotPlaceDto">
        insert into attraction_detail (content_id, created_time)
        values (#{contentId}, #{createdTime})
    </insert>
    
    <insert id="writeHotPlaceDescription" parameterType="hotPlaceDto">
        insert into attraction_description (content_id, homepage, overview, telname)
        values (#{contentId}, #{homepage}, #{overview}, #{telname})
    </insert>
    
    
	<update id="setFilePath" parameterType="hotPlaceDto" >
        UPDATE attraction_info
        SET first_image = #{firstImage}
        where content_id = #{contentId}
    </update>













    <sql id="search">
        <!-- <where> -->
            <if test="sidoCode != null and sidoCode != 0 ">
                AND info.sido_code = #{sidoCode}
            </if>
            <if test="gugunCode != null and gugunCode != 0 ">
                AND info.gugun_code = #{gugunCode}
            </if>
            <if test="contentTypeId != null and contentTypeId != 0">
                AND info.content_type_id = #{contentTypeId}
            </if>
            <if test="word != null and word != ''">
                <if test="key == 'title'">
                    and info.title like concat('%', #{word}, '%')
                </if>
                <if test="key != 'title'">
                    and ${key} = #{word}
                </if>
            </if>
       <!--  </where> -->
    </sql>


    <select id="selectAttr" parameterType="map" resultMap="resultAttr">
        SELECT  info.content_id,
        		info.member_id,
        		info.content_type_id,
        		info.title,
                info.addr1,
                info.addr2,
                info.zipcode,
                info.tel,
                info.latitude,
                info.longitude,
                info.first_image,
                des.homepage,
                des.overview,
                ah.hit,
                al.likes
        FROM attraction_info as info
              join attraction_description as des
        on info.content_id = des.content_id
        left join (select content_id, count(*) as hit from attraction_hit h group by h.content_id) as ah
        on info.content_id = ah.content_id
        left join (select content_id, count(*) as likes from attraction_like l group by l.content_id) as al
        on info.content_id = al.content_id
		where info.member_id != 1
        <include refid="search"/>

        ORDER BY ah.hit desc
      <!--   limit 15; -->
    </select>
    
    <select id="getHotPlace" parameterType="map" resultMap="resultAttr">
        SELECT  info.content_id,
        		info.member_id,
        		m.name,
        		info.content_type_id,
        		info.title,
                info.addr1,
                info.addr2,
                info.zipcode,
                info.tel,
                info.latitude,
                info.longitude,
                info.first_image,
                des.homepage,
                des.overview,
                ah.hit,
                al.likes,
                det.created_time,
                al2.isLike
        FROM attraction_info as info
              join attraction_description as des
        on info.content_id = des.content_id
        	join attraction_detail as det
        on info.content_id = det.content_id
        left join (select content_id, count(*) as hit from attraction_hit h group by h.content_id) as ah
        on info.content_id = ah.content_id
        left join (select content_id, count(*) as likes from attraction_like l group by l.content_id) as al
        on info.content_id = al.content_id
        left join (select content_id, count(*) as isLike from attraction_like as temp where temp.member_id = #{memberId} group by temp.content_id) as al2
        on info.content_id = al2.content_id
        left join members as m
        on info.member_id = m.member_id

        where info.content_id = #{contentId}
    </select>
    
    <select id="getRecentMemberHit" parameterType="map" resultType="java.lang.Integer">
        select count(*)
        from attraction_hit
        where member_id = #{memberId} and
            content_id = #{contentId}
        order by create_time desc
            limit 1
    </select>

	<insert id="createHit" parameterType="map">
        INSERT INTO attraction_hit (member_id, content_id)
        VALUES (#{memberId}, #{contentId})
    </insert>


    <update id="updateHit" parameterType="map" >
        UPDATE attraction_hit
        SET create_time = now()
        where member_id = #{memberId}
        and content_id = #{contentId}
    </update>
    
    <select id="getModifyHotPlace" parameterType="int" resultMap="resultAttr">
        SELECT  info.content_id,
        		info.member_id,
        		m.name,
        		info.content_type_id,
        		info.title,
                info.addr1,
                info.addr2,
                info.sido_code,
                info.gugun_code,
                info.zipcode,
                info.tel,
                info.latitude,
                info.longitude,
                info.first_image,
                des.homepage,
                des.overview,
                ah.hit,
                al.likes,
                det.created_time
        FROM attraction_info as info
              join attraction_description as des
        on info.content_id = des.content_id
        	join attraction_detail as det
        on info.content_id = det.content_id
        left join (select content_id, count(*) as hit from attraction_hit h group by h.content_id) as ah
        on info.content_id = ah.content_id
        left join (select content_id, count(*) as likes from attraction_like l group by l.content_id) as al
        on info.content_id = al.content_id
        left join members as m
        on info.member_id = m.member_id

        where info.content_id = #{contentId}
    </select>
    
    
    <update id="modifyHotPlcaeInfo" parameterType="map">
        update attraction_info
        set content_type_id = #{contentTypeId},
        	title = #{title},
        	addr1 = #{addr1},
        	addr2 = #{addr2},
        	zipcode = #{zipcode},
        	tel = #{tel},
        	first_image = #{firstImage},
        	sido_code = #{sidoCode},
        	gugun_code = #{gugunCode},
        	latitude = #{latitude},
        	longitude = #{longitude}
        where content_id = #{contentId}
    </update>
    
    <update id="modifyHotPlcaeDetail" parameterType="map">
        update attraction_detail
        set modified_time = #{modifiedTime}
        where content_id = #{contentId}
    </update>
    
    <update id="modifyHotPlcaeDescription" parameterType="map">
        update attraction_description
        set homepage = #{homepage},
        	overview = #{overview}
        where content_id = #{contentId}
    </update>
    
    
    
    
    <insert id="createLike" parameterType="map">
        INSERT INTO attraction_like (member_id, content_id)
        VALUES (#{memberId}, #{contentId})
    </insert>
    
    <delete id="deleteLike" parameterType="map">
        delete
        from attraction_like
        where content_id = #{contentId}
        and member_id = #{memberId}
    </delete>
    
    <delete id="deleteHotPlaceInfo">
        delete
        from attraction_info
        where content_id = #{contentId}
    </delete>
    
    <delete id="deleteHotPlaceDetail">
        delete
        from attraction_detail
        where content_id = #{contentId}
    </delete>
    
    <delete id="deleteHotPlaceDescription">
        delete
        from attraction_description
        where content_id = #{contentId}
    </delete>
    
    <delete id="deleteHotPlaceAttachments">
        delete
        from attraction_description
        where content_id = #{contentId}
    </delete>
    
    <delete id="deleteHotPlaceHit">
        delete
        from attraction_hit
        where content_id = #{contentId}
    </delete>
    
    <delete id="deleteHotPlaceLike">
        delete
        from attraction_like
        where content_id = #{contentId}
    </delete>
    
    
    
    

</mapper>
